// Advanced search filters
function AdvancedFilters({ filters, onChange }) {
  return (
    <div className="bg-white rounded-lg shadow p-6 mb-6">
      <h3 className="text-lg font-semibold mb-4">Advanced Filters</h3>
      
      <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
        <div>
          <label className="block text-sm font-medium text-gray-700 mb-2">
            Company Size
          </label>
          <select 
            value={filters.employeeRange}
            onChange={(e) => onChange({...filters, employeeRange: e.target.value})}
            className="w-full border rounded-lg px-3 py-2"
          >
            <option value="">Any Size</option>
            <option value="1-10">1-10 employees</option>
            <option value="11-50">11-50 employees</option>
            <option value="51-200">51-200 employees</option>
            <option value="200+">200+ employees</option>
          </select>
        </div>

        <div>
          <label className="block text-sm font-medium text-gray-700 mb-2">
            AI Readiness Score
          </label>
          <div className="flex items-center space-x-3">
            <input 
              type="range" 
              min="0" 
              max="100" 
              value={filters.minAiScore}
              onChange={(e) => onChange({...filters, minAiScore: e.target.value})}
              className="flex-1"
            />
            <span className="text-sm font-medium w-12">{filters.minAiScore}+</span>
          </div>
        </div>

        <div>
          <label className="block text-sm font-medium text-gray-700 mb-2">
            Has Website
          </label>
          <input 
            type="checkbox"
            checked={filters.hasWebsite}
            onChange={(e) => onChange({...filters, hasWebsite: e.target.checked})}
            className="rounded"
          />
        </div>
      </div>
    </div>
  );
}

// Interactive map component
function BusinessMap({ businesses, onBusinessSelect }) {
  const [map, setMap] = useState(null);
  const [markers, setMarkers] = useState([]);

  useEffect(() => {
    if (typeof window !== 'undefined' && businesses.length > 0) {
      loadGoogleMapsAPI().then(() => {
        initializeMap();
      });
    }
  }, [businesses]);

  const initializeMap = () => {
    const center = calculateCenter(businesses);
    const mapInstance = new google.maps.Map(document.getElementById('map'), {
      zoom: 12,
      center: center,
      styles: [] // Custom styling
    });

    const newMarkers = businesses.map(business => {
      const marker = new google.maps.Marker({
        position: { lat: business.lat, lng: business.lng },
        map: mapInstance,
        title: business.name,
        icon: {
          url: getMarkerIcon(business.aiReadinessScore),
          scaledSize: new google.maps.Size(30, 30)
        }
      });

      marker.addListener('click', () => {
        onBusinessSelect(business);
      });

      return marker;
    });

    setMarkers(newMarkers);
    setMap(mapInstance);
  };

  return (
    <div className="bg-white rounded-lg shadow mb-6">
      <div className="p-4 border-b">
        <h3 className="text-lg font-semibold">Prospect Locations</h3>
        <div className="flex items-center gap-4 mt-2 text-sm">
          <div className="flex items-center gap-1">
            <div className="w-3 h-3 bg-green-500 rounded-full"></div>
            <span>High AI Readiness (80+)</span>
          </div>
          <div className="flex items-center gap-1">
            <div className="w-3 h-3 bg-yellow-500 rounded-full"></div>
            <span>Medium (50-79)</span>
          </div>
          <div className="flex items-center gap-1">
            <div className="w-3 h-3 bg-red-500 rounded-full"></div>
            <span>Low (0-49)</span>
          </div>
        </div>
      </div>
      <div id="map" className="h-96"></div>
    </div>
  );
}